import BusinessForm from '@/components/ui/BusinessForm';
import Button from '@/components/ui/Button';
import File from '@/components/ui/File';
import Typography from '@/components/ui/Typography';
import { useAuth } from '@/hooks/AuthContext';
import { useAuthRedirect } from '@/hooks/useAuthRedirect';
import { baseUrl } from '@/utils';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';

export default function CreateSite() {
  const router = useRouter();
  useAuthRedirect();

  const [file, setFile] = useState<File | null>(null);

  const [showFile, setShowFile] = useState(true);
  const [showForm, setShowForm] = useState(true);

  useEffect(() => {
    if (file) {
      setShowForm(false);
    } else {
      setShowForm(true);
    }
  }, [file]);
  const token = useAuth();
  const handleCreateFromFile = async () => {
    if (!file) {
      return;
    }

    const formData = new FormData();
    formData.append('file', file);
    try {
      const response = await fetch(`${baseUrl}/api/csv/create-from-file`, {
        method: 'POST',
        body: formData,
        headers: { Authorization: `Bearer ${token.token}` },
      });

      if (!response.ok) {
        return;
      }
      router.replace('/');
    } catch (error) {
      console.error('Request failed:', error);
    }
  };

  return (
    <>
      <Head>
        <title>CleverSolution Admin | Create site</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <div className="bg-neutral-900 min-h-screen py-8 px-16 flex flex-col gap-7">
        <Typography variant="title">Upload file</Typography>
        <div className="flex flex-col items-center gap-[16px]">
          {showFile && (
            <File
              fileRef={file}
              onFileChange={(selectedFile) => setFile(selectedFile)}
            />
          )}
          {showFile && showForm && <Typography variant="text">Or</Typography>}
          {showForm && <BusinessForm setShowFile={setShowFile} />}
          {!showForm && (
            <div className="flex gap-[4px] w-full">
              <Button
                className="flex-1"
                onClick={() => {
                  setFile(null);
                }}
              >
                Back
              </Button>
              <Button
                className="flex-1"
                variant="action"
                onClick={handleCreateFromFile}
              >
                Create
              </Button>
            </div>
          )}
        </div>
      </div>
    </>
  );
}
