import Loader from '@/components/ui/loader/Loader';
import Spin from '@/components/ui/loader/Spin';
import Typography from '@/components/ui/Typography';
import { useAuth } from '@/hooks/AuthContext';
import { useAuthRedirect } from '@/hooks/useAuthRedirect';
import { baseUrl } from '@/utils';
import Head from 'next/head';
import { useRouter, useSearchParams } from 'next/navigation';
import { useEffect, useState } from 'react';

export default function RelumeGenerateSeo() {
  const router = useRouter();
  useAuthRedirect();
  const searchParams = useSearchParams();
  const siteId = searchParams.get('siteId');
  const [loader, setLoader] = useState(false);
  const token = useAuth();
  useEffect(() => {
    if (!siteId) return;
    console.log(siteId);
    setLoader(true);
    fetch(`${baseUrl}/api/generate-from-relume/generate-seo/${siteId}`, {
      method: 'POST',
      headers: { Authorization: `Bearer ${token.token}` },
    })
      .then(async (res) => {
        if (!res.ok) throw new Error('Network error');
        const data = await res.json();
        console.log(data);
        setLoader(false);
        router.replace('/');
      })
      .catch((err) => console.error(err));
  }, [siteId]);

  return (
    <>
      <Head>
        <title>CleverSolution Admin | Generate site seo (relume)</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      <div className="bg-neutral-900 min-h-screen pt-8 px-16 flex flex-col overflow-hidden">
        <Typography variant="title">Generating site seo: {siteId}</Typography>
        {loader && (
          <div className="w-full flex justify-center my-auto">
            <Spin />
          </div>
        )}
      </div>
    </>
  );
}
